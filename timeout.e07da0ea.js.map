{"mappings":"ACkBA,MAAM,EAAU,WAJD,AAAA,IACb,QAAQ,GAAG,CAAC,CAAC,mGAA2B,EAAE,EAAK,CAAC,CAClD,EAEmC,IAAM,KAEnC,EAAoB,KAAK,MAAM,GAAK,GAC1C,QAAQ,GAAG,CAAC,GAER,GACF,aAAa,GAOf,MAAM,EAAa,YAJI,AAAA,IACrB,QAAQ,GAAG,CAAC,CAAC,cAAc,EAAE,EAAK,GAAG,EAAE,KAAK,GAAG,GAAG,CAAC,CACrD,EAE+C,IAAM,KAEjD,GACA,aAAa,E,8D","sources":["<anon>","src/js/timeout.js"],"sourcesContent":["var $70bcf531876af3e7$exports = {};\n// const logMessage = () => {\n//   console.log('Лог при вызове callback функции через 3 секунды');\n// };\n// console.log('До вызова setTimeout');\n// setTimeout(() => {\n//   console.log('Внутри callback для setTineout');\n// }, 2000);\n// console.log('После вызова setTimeout');\n//\nconst $70bcf531876af3e7$var$logger = (time)=>{\n    console.log(`\\u{43D}\\u{435} \\u{43E}\\u{442}\\u{43C}\\u{435}\\u{43D}\\u{435}\\u{43D}\\u{43D}\\u{44B}\\u{439} setTimeout - ${time}`);\n};\nconst $70bcf531876af3e7$var$timerId = setTimeout($70bcf531876af3e7$var$logger, 2000, 2000);\nconst $70bcf531876af3e7$var$shouldCancelTimer = Math.random() > 0.3;\nconsole.log($70bcf531876af3e7$var$shouldCancelTimer);\nif ($70bcf531876af3e7$var$shouldCancelTimer) clearTimeout($70bcf531876af3e7$var$timerId);\nconst $70bcf531876af3e7$var$loggerInterval = (time)=>{\n    console.log(`setInterval - ${time} - ${Date.now()}`);\n};\nconst $70bcf531876af3e7$var$intervalId = setInterval($70bcf531876af3e7$var$loggerInterval, 2000, 2000);\nif ($70bcf531876af3e7$var$shouldCancelTimer) clearTimeout($70bcf531876af3e7$var$intervalId);\n\n\n//# sourceMappingURL=timeout.e07da0ea.js.map\n","// const logMessage = () => {\n//   console.log('Лог при вызове callback функции через 3 секунды');\n// };\n\n// console.log('До вызова setTimeout');\n\n// setTimeout(() => {\n//   console.log('Внутри callback для setTineout');\n// }, 2000);\n\n// console.log('После вызова setTimeout');\n\n//\n\nconst logger = time => {\n  console.log(`не отмененный setTimeout - ${time}`);\n};\n\nconst timerId = setTimeout(logger, 2000, 2000);\n\nconst shouldCancelTimer = Math.random() > 0.3;\nconsole.log(shouldCancelTimer);\n\nif (shouldCancelTimer) {\n  clearTimeout(timerId);\n}\n\nconst loggerInterval = time => {\n  console.log(`setInterval - ${time} - ${Date.now()}`);\n};\n\nconst intervalId = setInterval(loggerInterval, 2000, 2000);\n\nif (shouldCancelTimer) {\n    clearTimeout(intervalId);\n  }"],"names":["$70bcf531876af3e7$var$timerId","setTimeout","time","console","log","$70bcf531876af3e7$var$shouldCancelTimer","Math","random","clearTimeout","$70bcf531876af3e7$var$intervalId","setInterval","Date","now"],"version":3,"file":"timeout.e07da0ea.js.map"}